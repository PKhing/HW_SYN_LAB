010000_00101_00101_0000000000010000 //ORI r5, r5, 16 
010000_00110_00110_0000000011110000  //ORI r6, r6, b'11110000
000001_01001_01001_01001_00000000_100 //XOR r9, r9, r9 //r9 = 0
010000_00111_00111_0000000000000001 //ORI r7, r7, b'1 // r7 = 1
010000_01010_01010_0000000000000010 //ORI r10, r10, b'10 // r10 = 2
010000_01011_01011_0000000000000011 //ORI r11, r11, b'11 // r11 = 3
010000_01100_01100_0000000000000100 //ORI r12, r12, b'100 // r12 = 4
010000_01101_01101_0000000000000101 //ORI r13, r13, b'101 // r13 = 5
010000_01110_01110_0000000000000110 //ORI r14, r14, b'110 // r14 = 6
010000_01111_01111_0000000000000111 //ORI r15, r15, b'111 // r15 = 7
110000_00000000000000000000010011 //JMP 19 // to read
011100_01001_00000_1111111111111000 //SW r0, 0xFFF8 //start_write_ans
000001_00000_00110_00000_00000000_011 //AND r0, r0, r6 // r0 = r0 & 11110000
000001_00001_00001_00001_00000000_100 //XOR r1, r1, r1 // r1 = 0
100100_00000_01001_0000000000000011 //BEQ r0, r9, +3// to write digit3 //loop div
000001_00000_00101_00000_00000000_001 //SUB r0, r0, r5 // r0 = r0-16
000001_00001_00111_00001_00000000_000 //ADD r1, r1, r7 // r1+=1
110000_00000000000000000000001110 //JMP 14 //to loop div
011100_01001_00001_1111111111111100 //SW r1, 0xFFFC //write digit3
011000_01001_00010_1111111111100000 //LW r2, 0xFFE0 // read
011000_01001_00011_1111111111100100 //LW r3, 0xFFE4
011000_01001_00100_1111111111101000 //LW r4, 0xFFE8
011100_01001_00010_1111111111110000 //SW r2, 0xFFF0
011100_01001_00011_1111111111110100 //SW r3, 0xFFF4
000001_00100_01111_00100_00000000_011 //AND r4, r4, r15
100100_00100_01001_0000000000001000 //BEQ r4, r9 , +8// to ADD
100100_00100_00111_0000000000001001 //BEQ r4, r7 , +9// to SUB
100100_00100_01010_0000000000001010 //BEQ r4, r10, +10 // to OR
100100_00100_01011_0000000000001011 //BEQ r4, r11, +11 // to AND
100100_00100_01100_0000000000001100 //BEQ r4, r12, +12 // to XOR
100100_00100_01101_0000000000001101 //BEQ r4, r13, +13 // to NOT
100100_00100_01110_0000000000001110 //BEQ r4, r14, +14 // to COMA
000001_00011_00010_00000_00000000_101 //COM r0, r3, r2 //COMB
110000_00000000000000000000001011 //JMP 11 // to start_write_ans
000001_00010_00011_00000_00000000_000 //ADD r0, r2, r3
110000_00000000000000000000001011 //JMP 11 // to start_write_ans
000001_00010_00011_00000_00000000_001 //SUB r0, r2, r3
110000_00000000000000000000001011 //JMP 11 // to start_write_ans
000001_00010_00011_00000_00000000_010 //OR r0, r2, r3
110000_00000000000000000000001011 //JMP 11 // to start_write_ans
000001_00010_00011_00000_00000000_011 //AND r0, r2, r3
110000_00000000000000000000001011 //JMP 11 // to start_write_ans
000001_00010_00011_00000_00000000_100 //XOR r0, r2, r3
110000_00000000000000000000001011 //JMP 11 // to start_write_ans
000001_00010_00011_00000_00000000_110 //NOT r0, r2, r3
110000_00000000000000000000001011 //JMP 11 // to start_write_ans
000001_00010_00011_00000_00000000_101 //COM r0, r2, r3 //COMA
110000_00000000000000000000001011 //JMP 11 // to start_write_ans